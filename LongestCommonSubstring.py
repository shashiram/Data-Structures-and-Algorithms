
""" 
Given two strings. The task is to find the length of the longest common substring.

ex: 

    Input: S1 = "ABCDGH", S2 = "ACDGHR", n = 6, m = 6
    Output: 4
    Explanation: The longest common substring
    is "CDGH" which has length 4. 

"""

import sys, threading
sys.setrecursionlimit(10**7) # max depth of recursion
threading.stack_size(2**27)  # new thread will get stack of such size

s
s
n = len(s1)
m = len(s2)

memo={}

def fun(i,j):
    
    key=hash((i,j))
    if key in memo:
        return memo.get(key)

    if i>=n or j>=m:
        memo[key]=0
        return 0

    if s1[i]==s2[j]:
        sum= 1+fun(i+1,j+1)
        
        max_val=max(sum,fun(i+1,j+2),fun(i+2,j+1))
        memo[key]=max_val

        return max_val
    else:
        memo[key]=0
        return 0
    

max_len=0
for i in range(n):
    for j in range(m):
        count=fun(i,j)
        if count>0:
            max_len=max(max_len,count)

print(max_len)








    











    

    



        
       



           
